@startuml

class Complejo {

    + Almacen construirCon(Almacen)
}
interface Construccion {

    + Almacen construirCon(Almacen)
}

class Almacen {

    + Almacen(List<materiales> materiales)
    + consumir(consumos : List<Material>
    + equals(Object)
}

class Casa {

    + Casa(ambientes)
    + Almacen construirCon(Almacen)
}


class Edificio {

    + Edificio(int nroPisos)
    + Almacen construirCon(Almacen almacen)

    - consumirBase(Almacen)
    - consumirPlanta(Almacen)
    - consumirVivienda(Almacen)
}

interface Material {

    + reducirCantidadEquivalenteA(Material m);
}

class Cemento {
    - unidades

    + Cemento(unidades)
    + reducirCantidadEquivalenteA(Material gasto)
    + equals(Object)
}

class Pintura {
    - unidades

    + Pintura(unidades)
    + reducirCantidadEquivalenteA(Material gasto)
    + equals(Object)
}

class Caño {
    - unidades

    + Pintura(unidades)
    + reducirCantidadEquivalenteA(Material gasto)
    + equals(Object)
}

Almacen o- "*" Material
Material "3" ---* Casa: "base "
Material "3" ---* Casa: "ambiente "

Edificio *- "3" Material: "\t\tbase "

Pintura ----|> Material
Caño ----|> Material
Cemento ----|> Material

Complejo o-- "*" Construccion

Construccion <|--- Casa
Construccion <|--- Edificio
@enduml